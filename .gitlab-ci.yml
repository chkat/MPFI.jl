image: registry.gitlab.inria.fr/navarop/julia:latest

stages:
  - build
  - test
  - deploy # mandatory name for the stage to GitLab detect it's a Pages deployment

build:
  stage: build
  script:
    - julia -e 'using Pkg; Pkg.instantiate(); Pkg.precompile()'
  tags:
    - ci.inria.fr


test_linux:
  stage: test  
  tags:
    - julia
    - ci.inria.fr
  script: 
    - julia --project=@. -e "import Pkg; Pkg.test(; coverage = true)"
    - julia --project=test/coverage -e 'import Pkg; Pkg.instantiate()'
    - julia --project=test/coverage test/coverage/coverage-summary.jl
  coverage: '/Total: (\d+\.\d+)% of lines covered/'    # Run tests 
  

 
# # windows tests
windows:
  stage: test
  tags:
    - win
  script:
    - whoami
    - echo $Env:PATH
    - Start-Service ssh-agent
    - ssh -T git@gitlab.inria.fr
    - julia --version
    - julia --project=. -e 'using Pkg; Pkg.instantiate(); Pkg.update()'   # Install dependencies
    - julia -e 'using Pkg; Pkg.status()'  # Install dependencies
    - julia --project=. test/runtests.jl"  # Run tests 

# macOS tests
# macos:
#   stage: test
#   tags:
#     - macos-catalina
#   script:
#     - whoami
#     - . /Users/ci/.bashrc
#     - ssh -T git@gitlab.inria.fr
#     - julia --version
#     - julia --project=. -e 'using Pkg; Pkg.instantiate(); Pkg.update()'   # Install dependencies
#     - julia --project=. test/runtests.jl          # Run tests 
   
pages:
  tags:
    - ci.inria.fr
  stage: deploy
  script:
    - julia -e 'using Pkg; Pkg.develop(path=pwd())' 
    - julia -e 'using Pkg; import MPFI; Pkg.add("Documenter")' # install Documenter
    - julia --color=yes docs/make.jl # make documentation
    - mv docs/build public # move to the directory picked up by Gitlab pages
  artifacts:
    paths:
      - public
  only:
  - main